name: Continuous Deployment

on:
  push:
    branches: [main]

env:
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  CLUSTER_NAME: 'week08aksbinarap'
  RESOURCE_GROUP: 'week08-rg'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to ACR
      run: az acr login --name ${{ env.ACR_LOGIN_SERVER }}

    - name: Build and push backend images
      run: |
        docker build -t ${{ env.ACR_LOGIN_SERVER }}/product_service:latest ./backend/product_service/
        docker build -t ${{ env.ACR_LOGIN_SERVER }}/order_service:latest ./backend/order_service/
        docker push ${{ env.ACR_LOGIN_SERVER }}/product_service:latest
        docker push ${{ env.ACR_LOGIN_SERVER }}/order_service:latest

    - name: Build and push frontend image
      run: |
        docker build -t ${{ env.ACR_LOGIN_SERVER }}/frontend:latest ./frontend/
        docker push ${{ env.ACR_LOGIN_SERVER }}/frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to AKS
      run: |
        az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }} --overwrite-existing
        kubectl apply -f k8s/
        kubectl rollout status deployment/product-service --timeout=300s
        kubectl rollout status deployment/order-service --timeout=300s
        kubectl rollout status deployment/frontend --timeout=300s